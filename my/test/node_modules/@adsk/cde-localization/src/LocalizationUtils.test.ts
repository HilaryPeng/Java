/**
 * LocalizationUtils Tests
 */

import { localize, ss_localize } from './LocalizationUtils';

describe('localize', (): any => {
    it('returns a localized string when given a valid key', (): any => {
        const comment = localize('setupsheet', 'comment');
        expect(comment).toEqual('Comment');
    });

    it('returns a canned string when given an invalid key', (): any => {
        const comment = localize('setupsheet', 'garbageKey');
        expect(comment).toEqual('UNKNOWN STRING');
    });

    it('returns a canned string when given an invalid sub-bundle key', (): any => {
        const comment = localize('dummyBundleKey', 'garbageKey');
        expect(comment).toEqual('UNKNOWN STRING');
    });

    describe('ss_localize', (): any => {
        it('returns a localized string when given a valid key', (): any => {
            const comment = ss_localize('comment');
            expect(comment).toEqual('Comment');
        });

        it('returns a canned string when given an invalid key', (): any => {
            const comment = ss_localize('garbageKey');
            expect(comment).toEqual('UNKNOWN STRING');
        });
    });
});
