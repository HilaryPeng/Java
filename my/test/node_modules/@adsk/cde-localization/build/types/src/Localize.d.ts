import * as React from 'react';
import { IMediatorComponent, IMediatorComponentActions, IMediatorComponentReducers, MediatorComponent } from '@adsk/cde-mediator';
/**
 * Localize component - localization of labels through component
 */
declare class Localize extends MediatorComponent implements IMediatorComponent {
    private static mediator;
    private static localeMap;
    private actions;
    private reducers;
    private packageIdentifier;
    /**
     * Constructor of the class Localize
     * @param ILocalize - interface defined with properties passed into this component
     */
    constructor(props: ILocalize);
    static getBundle(): any;
    /**
     * Format date to a specified format.
     * For example: moment(date).format('LT') //  "h:mm A"
     * moment(data).format('ll') // "MMM D YYYY"
     * return an string and we can change return value in the future. all format can view in https://momentjs.com/docs/
     */
    static formatTime(time: string): any;
    /**
     * Format date to a specified format.
     * Input date string and format format like 'lll','ll'
     * It is using function moment(data).format('ll') // "MMM D YYYY"
     * return an string. All format can view in https://momentjs.com/docs/
     */
    static formatDate(date: string, dateFormat: string): any;
    static getDayFromTime(time: string): any;
    static getDataCardTimeFormat(time: string): any;
    private static getLocaleMap;
    /**
     * Match correct language string for moment.
     * @param local language string
     */
    private static getMomentLocalMap;
    /**
     * Implement IMediatorComponent getActions
     */
    getActions(): IMediatorComponentActions;
    /**
     * Implement IMediatorComponent getReducers
     */
    getReducers(): IMediatorComponentReducers;
    /**
     * Implement IMediatorComponent getMiddleware
     */
    getMiddleware(): Function;
    /**
     * Built-in React lifecycle callback - called when this component is mounted
     */
    componentDidMount(): void;
    /**
     * Built-in React lifecycle callback - called for rendering of this component
     * @return A React component
     */
    render(): React.ReactNode;
}
interface ILocalize {
    id: string;
}
export default Localize;
export { ILocalize };
//# sourceMappingURL=Localize.d.ts.map